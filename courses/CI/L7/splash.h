unsigned const char bitmap [1024] = {
// 'splash_r4', 128x64px
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 
0xe0, 0xc0, 0x80, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0x60, 0x40, 0x00, 0x40, 0x70, 0x78, 0x7c, 
0x7e, 0x70, 0x60, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xf0, 0xf8, 0xf8, 0xfc, 0x7c, 0x7c, 0x7c, 0xfe, 0xfe, 
0xfe, 0xfe, 0x7c, 0x7c, 0x7c, 0xf8, 0xf8, 0xf0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x87, 0x9f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xfb, 0xfb, 0xfd, 0xfd, 0xfe, 0xfe, 0x7e, 0x3f, 0x1f, 0x0f, 0x07, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0xe0, 0xe0, 0xe0, 
0xe0, 0xe0, 0xff, 0x3f, 0xbf, 0xb0, 0xb0, 0xb0, 0xbf, 0xbf, 0xb0, 0xb0, 0xb0, 0xbf, 0xbf, 0xb0, 
0xb0, 0xb0, 0xb0, 0xbf, 0xbf, 0xb0, 0xb0, 0xb0, 0xb0, 0x3f, 0xff, 0xff, 0x70, 0x70, 0x70, 0x70, 
0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xe0, 0xe2, 0xe0, 0xf0, 0xff, 
0xff, 0xf0, 0xe0, 0xe4, 0xe0, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x08, 0x0c, 0x0e, 0x0f, 0x0f, 0x0f, 0x0d, 0x08, 0x00, 0x00, 0x00, 0x01, 0x03, 
0x07, 0x0f, 0x1f, 0x0f, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1c, 0x1c, 0x1c, 
0x1c, 0xff, 0xff, 0x00, 0xff, 0x0f, 0x0f, 0xcf, 0xcf, 0x0f, 0x1f, 0xff, 0xff, 0x09, 0x09, 0xff, 
0xff, 0x3f, 0x1f, 0xcf, 0xcf, 0xcf, 0xcf, 0x9f, 0xff, 0x00, 0xff, 0xff, 0x8e, 0x8e, 0x8e, 0x8e, 
0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xf3, 0xe7, 0xf9, 0xfc, 0xf3, 0xe7, 
0xf3, 0xfc, 0xf9, 0xe7, 0xf3, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x81, 0x81, 0x82, 0x82, 0x82, 0xc7, 
0xc7, 0xff, 0xff, 0x00, 0xff, 0xf0, 0xf0, 0xfc, 0xfc, 0xfc, 0xfe, 0xff, 0xff, 0xf0, 0xf0, 0xff, 
0xff, 0xfc, 0xf8, 0xf3, 0xf3, 0xf3, 0xf3, 0xf9, 0xff, 0x00, 0xff, 0xff, 0xe3, 0xe3, 0xe3, 0xe3, 
0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x3f, 0x1f, 0x0f, 0x1f, 0x3f, 0x3f, 0x3f, 0x0f, 0x0f, 0x1f, 0x3f, 0x1f, 
0x0f, 0x07, 0x0f, 0x1f, 0x3f, 0x1f, 0x0f, 0x07, 0x07, 0x0f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xc0, 0xe0, 0xf0, 0x70, 0x78, 0x3c, 0x1c, 0x1c, 0x1e, 0x0e, 0x0e, 0x0e, 
0xce, 0x0e, 0x0e, 0x1e, 0x1c, 0x1c, 0x3c, 0x78, 0x70, 0xf0, 0xe0, 0xc0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x21, 0x20, 0x30, 0x10, 0x10, 0x31, 
0x31, 0x7f, 0xff, 0xf0, 0xf7, 0x37, 0x37, 0x37, 0xf7, 0xf7, 0x37, 0x37, 0x37, 0xf7, 0xf7, 0x37, 
0x37, 0x37, 0x37, 0xf7, 0xf7, 0x37, 0x37, 0x37, 0x37, 0xf0, 0xff, 0xff, 0x18, 0x18, 0x18, 0x18, 
0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x80, 0xe0, 0xf0, 0xf8, 0x78, 0x3c, 0x1c, 0x0e, 0x0e, 0x0f, 0x07, 0x07, 0x07, 
0x07, 0x07, 0x07, 0x0f, 0x0e, 0x0e, 0x1c, 0x3c, 0x78, 0xf8, 0xf0, 0xe0, 0x80, 0x00, 0x00, 0x00, 
0x00, 0xf0, 0xfe, 0xff, 0x0f, 0x03, 0x01, 0x00, 0x00, 0x00, 0x3c, 0x7e, 0x7e, 0xff, 0xe7, 0xe7, 
0xff, 0xe7, 0xef, 0xee, 0xce, 0x8c, 0x00, 0x00, 0x00, 0x01, 0x03, 0x0f, 0xff, 0xfe, 0xf0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xc1, 0x3f, 0x01, 0x00, 0x00, 0x00, 0x3f, 0x41, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 
0x00, 0x00, 0x00, 0x41, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7f, 0x81, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xf8, 0xff, 0xff, 0x0f, 0x01, 0x00, 0x00, 0x00, 0xa0, 0xa0, 0xf8, 0xfc, 0xfe, 0xbe, 0xae, 
0xa6, 0xa6, 0x0e, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0xff, 0xff, 0xf8, 0x00, 
0x00, 0x07, 0x3f, 0x7f, 0xf8, 0xe0, 0xc0, 0x00, 0x00, 0x00, 0x1c, 0x3c, 0x3c, 0x3c, 0x38, 0x38, 
0xff, 0x39, 0x39, 0x3f, 0x1f, 0x0f, 0x07, 0x00, 0x00, 0xc0, 0xe0, 0xf8, 0x7f, 0x3f, 0x07, 0x00, 
0x80, 0x40, 0x20, 0x90, 0x40, 0x20, 0x00, 0x38, 0x7c, 0xee, 0xc6, 0xc2, 0x82, 0x82, 0x86, 0x06, 
0x04, 0x00, 0x00, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf6, 0xf6, 0x00, 0x00, 0xe0, 0xf0, 
0x30, 0x10, 0x10, 0x30, 0xfe, 0xfe, 0x00, 0x00, 0xc0, 0xe0, 0x30, 0x10, 0x10, 0x30, 0xf0, 0xe0, 
0x00, 0x00, 0xf0, 0xf0, 0x60, 0x10, 0x10, 0x30, 0x30, 0x00, 0x20, 0x40, 0x90, 0x20, 0x40, 0x80, 
0x00, 0x0f, 0x3f, 0x7f, 0xfc, 0xe0, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x07, 0x0f, 0x1f, 0x1f, 0x1c, 
0x18, 0x18, 0x1c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xe0, 0xfc, 0x7f, 0x3f, 0x07, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0f, 0x0f, 0x1e, 0x1c, 0x1c, 0x3c, 0x38, 0x38, 0x38, 
0x39, 0x38, 0x38, 0x3c, 0x1c, 0x1c, 0x1e, 0x0f, 0x0f, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x01, 
0x02, 0x04, 0x09, 0x12, 0x04, 0x08, 0x00, 0x18, 0x18, 0x30, 0x30, 0x20, 0x20, 0x31, 0x31, 0x1f, 
0x0f, 0x00, 0x00, 0x1f, 0x3f, 0x30, 0x20, 0x20, 0x00, 0x00, 0x3f, 0x3f, 0x00, 0x00, 0x1f, 0x3f, 
0x30, 0x20, 0x30, 0x10, 0x3f, 0x3f, 0x00, 0x00, 0x0f, 0x1f, 0x32, 0x22, 0x22, 0x22, 0x33, 0x13, 
0x00, 0x00, 0x3f, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x12, 0x09, 0x04, 0x02, 
0x01, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x07, 0x0f, 0x1e, 0x1c, 0x1c, 0x3c, 0x38, 0x38, 0x38, 
0x38, 0x38, 0x38, 0x3c, 0x1c, 0x1c, 0x1e, 0x0f, 0x07, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00
};

unsigned const char mur[10] = {0xFF,0xAB,0x55,0xAB,0xFF,
					            0xFF,0xAA,0xD5,0xAA,0xFF};

unsigned const char muret[5] = {0xFE, 0xAA, 0xD6, 0xAA, 0xFE};

unsigned const char murazo[15] = {0xFF,0xAB,0x55,0xAB,0xFF,
                                    0xFF,0xAA,0x55,0xAA,0xFF,
                                    0xFF,0xAA,0xD5,0xAA,0xFF};
/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es printa el nom del projecte i el nom dels autors per la GLCD
*/
void autors();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Mostra la ilustració del Joc Slider durant 3 segons.
*/
void pintar_mapa();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Actualitza la posició dels murs i els escriu a pantalla.
*/
void pintar_mur();

/*
Pre: f val 0 si ens movem horitzontalment, 1 si ho fem verticalment. Altrament, no ens movem.
Post: Consulta si està en contacte amb algun objecte i actualitza la posició del personatge.
*/
void person(int f);

/*
Pre: i és la coordenada x [0...127] on volem mostrar un cro
Post: Mostra per pantalla un cor.
*/
void love(int i);

/*
Pre: "ix" �s la coordenada X i "p" la p�gina en la coordenada Y en la que es troba el dollar
Post: Es printa un dollar en la posici� definida per "ix" i "p"
*/
void print_dollar(int ix, int p);

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Com a resultat, es borra el dollar que es mostra per pantalla i se suma la puntuaci� al jugador
*/
void clear_dollar();

/*
Pre: "ix" �s la coordenada X i "p" la p�gina en la coordenada Y en la que es troba el dollar
Post: Es printa un fantasma en la posici� depinida per "ix" i "p" 
*/
void print_ghost(int ix, int p);

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Com a resultat, se li resta una vida al jugador
*/
void clear_ghost();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es detecta si el personatge entra en contacte amb el dollar i en tal cas, es borra aquest dollar i es suma la puntuaci� al jugador 
*/
void hit_dollar();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es detecta si el personatge entra en contacte amb el fantasma i en tal cas se li resta una vida al jugador
*/
void hit_ghost();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es detecta si el personatge entra en contacte amb una paret i en tal cas, s'acaba la partida i el jugador perd
*/
void hit_wall();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es configuren tots els registres necessaris per a la transmissi� per l�nia s�rie
*/
void configT();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es configuren tots els registres necessaris per a la recepci� per l�nia s�rie
*/
void configR();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es configuren el Timer 2 i els registres necessaris per al bon funcipnament del PWM
*/
void configPWM();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es configuren els ports I/O del PIC, els perif�rics, el PWM, la l�nia s�rie i s'inicia la GLCD
*/
void configPIC();

/*
Pre: c és un caràcter
Post: S'envia c per línia sèrie.
*/
void send_c(unsigned const char c);
 
/*
Pre: st es un conjunt de caràcters (string)
Post: S'envia st per línia sèrie.
*/
void send_s(const char *st); 

/*
Pre: char_llegit es el caràcter llegit per linia sèrie
Post: Segons char_llegit s'ha efectuat l'acció en el joc corresponent.
*/
void wasd(char char_llegit);

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Com a resultat, s'efectuen aplicacions de tots el botons utilitzats excepte el d'inici
*/
void buttons();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es printa per la l�nea s�rie el nom del projecte i els noms dels membres del grup
*/
void printar_noms();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es printen per la GLCD les vides restants del jugador
*/
void print_vides();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es printa per la GLCD la puntuaci� actual del jugador
*/
void marcador();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: S'inicialitzen tant la barra horitzontal (mesura el temps transcorregut) com la vertical (mesura la puntuaci� obtinguda respecte el total)
*/
void print_bars();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Actualitza la barra horitzontal en funci� del temps transcorregut i la vertical en funci� de la puntuaci� obtinguda
*/
void update_bars();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: S'incrementa un segon al temps i s'actualitzen estadístiques i gràfics del joc.
*/
void inc_seg();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: soli val 1, és a dir, hi ha una solicitud pendent i torna el caràcter llegit per linia sèrie.
*/
char llegir_char();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Comprova si s'ha arribat al l�mit de temps, si s'han acabat les vides del jugador o si s'ha arribat a la puntuaci� m�xima
*/
int check_stats();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: En cas d'haver guanyat, mostra un missatge de vict�ria i en cas d'haver perdut un missatge de derrota
*/
void game_over();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es mostra el nom del projecte i del autors en la GLCD i en la l�nia s�ria, i la pantalla de benvinguda en la GLCD
*/
void presentacio();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es pinten la barra horitzontal i la vertical, el personatge del jugador i els murs
*/
void start();

/*
Pre: Aquesta funci� no requereix cap par�metre
Post: Es mostra el menu principal del joc i es configura el bot� per iniciar-lo.
*/
int menu();